{"version":3,"sources":["webpack://awesome-genome-visualization/./src/pages/index.js"],"names":["Cards","tools","map","row","Card","key","name","url","language","tags","img","github","platform","publication","note","alt_url","useState","expanded","setExpanded","className","href","year","join","role","onClick","state","alt","loading","src","TagFilters","setFilters","filters","Set","forEach","tool","cat","add","htmlFor","id","value","tag","onChange","event","target","sort","LanguageFilters","languages","PlatformFilters","filteredTools","importedTools","includes","filter"],"mappings":"qsiDAKMA,EAAQ,SAAC,GACb,OAD2B,EAAZC,MACFC,KAAI,SAACC,GAAD,OAAS,gBAACC,EAAD,CAAMD,IAAKA,EAAKE,IAAKF,EAAIG,WAG/CF,EAAO,SAAC,GAaP,IAAD,IAZJD,IACEG,EAWE,EAXFA,KACAC,EAUE,EAVFA,IACAC,EASE,EATFA,SACAC,EAQE,EARFA,KACAC,EAOE,EAPFA,IACAC,EAME,EANFA,OACAC,EAKE,EALFA,SACAC,EAIE,EAJFA,YACAC,EAGE,EAHFA,KACAC,EAEE,EAFFA,QAEE,GAC4BC,eAAS,GAAlCC,EADH,KACaC,EADb,KAEJ,OACE,uBAAKC,UAAU,QACb,2BACE,0BAAKb,GACL,qBAAGa,UAAU,QACX,qBAAGC,KAAMb,GAAMA,IAEhBQ,EACC,qBAAGI,UAAU,QAAb,WACU,qBAAGC,KAAML,GAAUA,IAE3B,KACHF,EACC,qBAAGM,UAAU,QAAb,eACe,IACb,qBAAGC,KAAMP,EAAYN,KAClBM,EAAYN,IAAK,IACjBM,EAAYQ,KAAZ,IAAuBR,EAAYQ,KAAnC,IAA6C,OAGhD,KACHb,EAAW,sCAAcA,EAASc,KAAK,OAAa,KACpDb,EAAO,kCAAUA,EAAKa,KAAK,OAAa,KACxCR,EAAO,kCAAUA,GAAY,KAC7BH,EACC,qBAAGQ,UAAU,QAAb,WACU,qBAAGC,KAAMT,GAASA,IAE1B,KACHC,EAAW,sCAAcA,EAASU,KAAK,OAAa,MAEvD,0BACEC,KAAK,eACLC,QAAS,kBAAMN,GAAY,SAACO,GAAD,OAAYA,OAEtCf,EACC,uBACEgB,IAAG,iBAAmBpB,EACtBqB,QAAQ,OACRR,UAAWF,EAAW,WAAa,GACnCW,IAAKlB,IAGP,qBAAGS,UAAU,iBAAb,iBAEDF,EACC,uBAAKE,UAAU,kBACb,uBAAKO,IAAG,iBAAmBpB,EAAQsB,IAAKlB,KAExC,QAMNmB,EAAa,SAAC,GAAoC,IAAlC5B,EAAiC,EAAjCA,MAAO6B,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QACjCtB,EAAO,IAAIuB,IAMjB,OALA/B,EAAMgC,SAAQ,SAACC,GACTA,EAAKzB,MACPyB,EAAKzB,KAAKwB,SAAQ,SAACE,GAAD,OAAS1B,EAAK2B,IAAID,SAItC,uBAAKhB,UAAU,cACb,yBAAOkB,QAAQ,cAAf,SACA,0BACEC,GAAG,aACHC,MAAOR,EAAQS,KAAO,GACtBC,SAAU,SAACC,GAAD,OACRZ,EAAW,OAAD,UAAMC,EAAN,CAAeS,IAAKE,EAAMC,OAAOJ,WAG7C,0BAAQA,MAAM,IAAd,2BACC,OAAI9B,GAAMmC,OAAO1C,KAAI,SAACsC,GAAD,OACpB,0BAAQnC,IAAKmC,EAAKF,GAAIE,GACnBA,SAQPK,EAAkB,SAAC,GAAoC,IAAlC5C,EAAiC,EAAjCA,MAAO6B,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QACtCe,EAAY,IAAId,IAMtB,OALA/B,EAAMgC,SAAQ,SAACC,GACTA,EAAK1B,UACP0B,EAAK1B,SAASyB,SAAQ,SAACE,GAAD,OAASW,EAAUV,IAAID,SAI/C,uBAAKhB,UAAU,cACb,yBAAOkB,QAAQ,mBAAf,cACA,0BACEE,MAAOR,EAAQvB,UAAY,GAC3B8B,GAAG,kBACHG,SAAU,SAACC,GAAD,OACRZ,EAAW,OAAD,UAAMC,EAAN,CAAevB,SAAUkC,EAAMC,OAAOJ,WAGlD,0BAAQA,MAAM,IAAd,2BACC,OAAIO,GAAWF,OAAO1C,KAAI,SAACsC,GAAD,OACzB,0BAAQnC,IAAKmC,EAAKF,GAAIE,GACnBA,SAQPO,EAAkB,SAAC,GAAoC,IAAlC9C,EAAiC,EAAjCA,MAAO6B,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QACtCnB,EAAW,IAAIoB,IAMrB,OALA/B,EAAMgC,SAAQ,SAACC,GACTA,EAAKtB,UACPsB,EAAKtB,SAASqB,SAAQ,SAACE,GAAD,OAASvB,EAASwB,IAAID,SAI9C,uBAAKhB,UAAU,cACb,yBAAOkB,QAAQ,mBAAf,cACA,0BACEE,MAAOR,EAAQnB,UAAY,GAC3B0B,GAAG,kBACHG,SAAU,SAACC,GAAD,OACRZ,EAAW,OAAD,UAAMC,EAAN,CAAenB,SAAU8B,EAAMC,OAAOJ,WAGlD,0BAAQA,MAAM,IAAd,2BACC,OAAI3B,GAAUgC,OAAO1C,KAAI,SAACsC,GAAD,OACxB,0BAAQnC,IAAKmC,EAAKF,GAAIE,GACnBA,SA8Eb,EAvEkB,WAAO,IAAD,GACQxB,cAAS,IAAhCe,EADe,KACND,EADM,KAEdtB,EAA4BuB,EAA5BvB,SAAUgC,EAAkBT,EAAlBS,IAAK5B,EAAamB,EAAbnB,SAEjBoC,EAAgBC,YACZ,SAACf,GAAD,aAAW1B,IAAQ,UAAG0B,EAAK1B,gBAAR,aAAG,EAAe0C,SAAS1C,OACrD2C,QAAO,SAACjB,GAAD,aAAWM,IAAG,UAAGN,EAAKzB,YAAR,aAAG,EAAWyC,SAASV,OAC5CW,QAAO,SAACjB,GAAD,aAAWtB,IAAQ,UAAGsB,EAAKtB,gBAAR,aAAG,EAAesC,SAAStC,OAExD,OACE,wBAAMO,UAAU,QACd,6DACA,0DACA,2EACkD,IAChD,qBAAGC,KAAK,4DAAR,6DAIF,uGAKA,qBAAGkB,GAAG,mBAAN,mBAEE,0BACEd,QAAS,kBAAMM,EAAW,CAAEU,IAAK,GAAIhC,SAAU,GAAII,SAAU,OAD/D,iBAKA,0BAAQY,QAAS,kBAAMM,EAAW,CAAEU,IAAK,cAAzC,mCAGA,0BAAQhB,QAAS,kBAAMM,EAAW,CAAEU,IAAK,kBAAzC,gCAGA,0BAAQhB,QAAS,kBAAMM,EAAW,CAAEU,IAAK,cAAzC,kBAGA,0BAAQhB,QAAS,kBAAMM,EAAW,CAAEU,IAAK,UAAzC,eAGF,uBAAKF,GAAG,WACN,gBAACT,EAAD,CACE5B,MAAOgD,IACPlB,QAASA,EACTD,WAAYA,IAEd,gBAACe,EAAD,CACE5C,MAAOgD,IACPlB,QAASA,EACTD,WAAYA,IAEd,gBAACiB,EAAD,CACE9C,MAAOgD,IACPlB,QAASA,EACTD,WAAYA,KAIhB,gBAAC9B,EAAD,CAAO+B,QAASA,EAAS9B,MAAO+C,IAChC,6IAIA","file":"component---src-pages-index-js-868e788b0c62a88fbe11.js","sourcesContent":["import React, { useState } from \"react\";\nimport { tools as importedTools } from \"./TOOLS.json\";\n\nimport \"./App.css\";\n\nconst Cards = ({ tools }) => {\n  return tools.map((row) => <Card row={row} key={row.name} />);\n};\n\nconst Card = ({\n  row: {\n    name,\n    url,\n    language,\n    tags,\n    img,\n    github,\n    platform,\n    publication,\n    note,\n    alt_url,\n  },\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div className=\"card\">\n      <div>\n        <h3>{name}</h3>\n        <p className=\"link\">\n          <a href={url}>{url}</a>\n        </p>\n        {alt_url ? (\n          <p className=\"link\">\n            Alt url <a href={alt_url}>{alt_url}</a>\n          </p>\n        ) : null}\n        {publication ? (\n          <p className=\"link\">\n            Publication:{\" \"}\n            <a href={publication.url}>\n              {publication.url}{\" \"}\n              {publication.year ? `(${publication.year})` : null}\n            </a>\n          </p>\n        ) : null}\n        {language ? <p>Language: {language.join(\", \")}</p> : null}\n        {tags ? <p>Tags: {tags.join(\", \")}</p> : null}\n        {note ? <p>Note: {note}</p> : null}\n        {github ? (\n          <p className=\"link\">\n            Github: <a href={github}>{github}</a>\n          </p>\n        ) : null}\n        {platform ? <p>Platform: {platform.join(\", \")}</p> : null}\n      </div>\n      <figure\n        role=\"presentation\"\n        onClick={() => setExpanded((state) => !state)}\n      >\n        {img ? (\n          <img\n            alt={`screenshot of ${name}`}\n            loading=\"lazy\"\n            className={expanded ? \"expanded\" : \"\"}\n            src={img}\n          />\n        ) : (\n          <p className=\"no-screenshot\">No screenshot</p>\n        )}\n        {expanded ? (\n          <div className=\"modal-backdrop\">\n            <img alt={`screenshot of ${name}`} src={img} />\n          </div>\n        ) : null}\n      </figure>\n    </div>\n  );\n};\n\nconst TagFilters = ({ tools, setFilters, filters }) => {\n  const tags = new Set();\n  tools.forEach((tool) => {\n    if (tool.tags) {\n      tool.tags.forEach((cat) => tags.add(cat));\n    }\n  });\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"tag-select\">Tag: </label>\n      <select\n        id=\"tag-select\"\n        value={filters.tag || \"\"}\n        onChange={(event) =>\n          setFilters({ ...filters, tag: event.target.value })\n        }\n      >\n        <option value=\"\">-- select an option --</option>\n        {[...tags].sort().map((tag) => (\n          <option key={tag} id={tag}>\n            {tag}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nconst LanguageFilters = ({ tools, setFilters, filters }) => {\n  const languages = new Set();\n  tools.forEach((tool) => {\n    if (tool.language) {\n      tool.language.forEach((cat) => languages.add(cat));\n    }\n  });\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"language-select\">Language: </label>\n      <select\n        value={filters.language || \"\"}\n        id=\"language-select\"\n        onChange={(event) =>\n          setFilters({ ...filters, language: event.target.value })\n        }\n      >\n        <option value=\"\">-- select an option --</option>\n        {[...languages].sort().map((tag) => (\n          <option key={tag} id={tag}>\n            {tag}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nconst PlatformFilters = ({ tools, setFilters, filters }) => {\n  const platform = new Set();\n  tools.forEach((tool) => {\n    if (tool.platform) {\n      tool.platform.forEach((cat) => platform.add(cat));\n    }\n  });\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"platform-select\">Platform: </label>\n      <select\n        value={filters.platform || \"\"}\n        id=\"platform-select\"\n        onChange={(event) =>\n          setFilters({ ...filters, platform: event.target.value })\n        }\n      >\n        <option value=\"\">-- select an option --</option>\n        {[...platform].sort().map((tag) => (\n          <option key={tag} id={tag}>\n            {tag}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\nconst IndexPage = () => {\n  const [filters, setFilters] = useState({});\n  const { language, tag, platform } = filters;\n\n  const filteredTools = importedTools\n    .filter((tool) => (language ? tool.language?.includes(language) : true))\n    .filter((tool) => (tag ? tool.tags?.includes(tag) : true))\n    .filter((tool) => (platform ? tool.platform?.includes(platform) : true));\n\n  return (\n    <main className=\"page\">\n      <title>awesome-genome-visualization</title>\n      <h1>awesome-genome-visualization</h1>\n      <p>\n        This is a companion website for the github repo{\" \"}\n        <a href=\"https://github.com/cmdcolin/awesome-genome-visualization\">\n          https://github.com/cmdcolin/awesome-genome-visualization\n        </a>\n      </p>\n      <p>\n        Please submit PRs for more tools there and thanks to all the\n        contributors!\n      </p>\n\n      <p id=\"example-filters\">\n        Example filters:\n        <button\n          onClick={() => setFilters({ tag: \"\", language: \"\", platform: \"\" })}\n        >\n          Clear filters\n        </button>\n        <button onClick={() => setFilters({ tag: \"General\" })}>\n          General-purpose genome browsers\n        </button>\n        <button onClick={() => setFilters({ tag: \"Comparative\" })}>\n          Synteny/comparative browsers\n        </button>\n        <button onClick={() => setFilters({ tag: \"Dotplot\" })}>\n          Dotplot viewer\n        </button>\n        <button onClick={() => setFilters({ tag: \"MSA\" })}>MSA viewer</button>\n      </p>\n\n      <div id=\"filters\">\n        <TagFilters\n          tools={importedTools}\n          filters={filters}\n          setFilters={setFilters}\n        />\n        <LanguageFilters\n          tools={importedTools}\n          filters={filters}\n          setFilters={setFilters}\n        />\n        <PlatformFilters\n          tools={importedTools}\n          filters={filters}\n          setFilters={setFilters}\n        />\n      </div>\n\n      <Cards filters={filters} tools={filteredTools} />\n      <p>\n        Note: if you would like your tool removed or screenshot removed (for\n        copyright purposes for example) let me know\n      </p>\n      <p>And always remember, \"YOU ARE AWESOME!!\" - Ben Busby</p>\n    </main>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}