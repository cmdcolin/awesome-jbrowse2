{"version":3,"sources":["webpack://awesome-genome-visualization/./src/pages/index.js"],"names":["Cards","tools","map","row","Card","key","name","url","language","tags","img","github","platform","publication","note","alt_url","useState","expanded","setExpanded","className","href","year","join","style","flexGrow","role","onClick","state","alt","loading","maxWidth","maxHeight","cursor","width","src","TagFilters","setFilters","filters","Set","tool","forEach","cat","add","display","htmlFor","id","value","tag","onChange","event","target","sort","LanguageFilters","languages","PlatformFilters","useQueryParams","StringParam","filteredTools","includes","filter","margin"],"mappings":"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","file":"component---src-pages-index-js-58a4f045b378f6593a47.js","sourcesContent":["import React, { useState } from \"react\";\nimport { tools } from \"./TOOLS.json\";\nimport { useQueryParams, StringParam } from \"use-query-params\";\n\nimport \"./App.css\";\n\nconst Cards = ({ tools }) => {\n  return tools.map((row) => <Card row={row} key={row.name} />);\n};\n\nconst Card = ({\n  row: {\n    name,\n    url,\n    language,\n    tags,\n    img,\n    github,\n    platform,\n    publication,\n    note,\n    alt_url,\n  },\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div className=\"card\">\n      <div>\n        <h3>{name}</h3>\n        <a href={url}>{url}</a>\n        {alt_url ? (\n          <p>\n            Alt url <a href={alt_url}>{alt_url}</a>\n          </p>\n        ) : null}\n        {publication ? (\n          <p>\n            Publication:{\" \"}\n            <a href={publication.url}>\n              {publication.url}{\" \"}\n              {publication.year ? `(${publication.year})` : null}\n            </a>\n          </p>\n        ) : null}\n        {language ? <p>Language: {language.join(\", \")}</p> : null}\n        {tags ? <p>tags: {tags.join(\", \")}</p> : null}\n        {note ? <p>note: {note}</p> : null}\n        {github ? (\n          <p>\n            Github: <a href={github}>{github}</a>\n          </p>\n        ) : null}\n        {platform ? <p>platform: {platform.join(\", \")}</p> : null}\n      </div>\n      <div style={{ flexGrow: 1 }} />\n      <div role=\"presentation\" onClick={() => setExpanded((state) => !state)}>\n        {img ? (\n          <img\n            alt={`screenshot of ${name}`}\n            loading=\"lazy\"\n            style={\n              expanded\n                ? { maxWidth: 1000, maxHeight: 800, cursor: \"pointer\" }\n                : {\n                    maxWidth: 400,\n                    width: \"90%\",\n                    maxHeight: 250,\n                    cursor: \"pointer\",\n                  }\n            }\n            src={img}\n          />\n        ) : (\n          <p>No screenshot</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst TagFilters = ({ setFilters, filters }) => {\n  const tags = new Set();\n  tools.forEach((tool) => {\n    if (tool.tags) {\n      tool.tags.forEach((cat) => tags.add(cat));\n    }\n  });\n  return (\n    <div style={{ display: \"block\" }}>\n      <label htmlFor=\"tag-select\">Tag: </label>\n      <select\n        id=\"tag-select\"\n        value={filters.tag || \"\"}\n        onChange={(event) =>\n          setFilters({ ...filters, tag: event.target.value })\n        }\n      >\n        <option value=\"\">-- select an option --</option>\n        {[...tags].sort().map((tag) => (\n          <option key={tag} id={tag}>\n            {tag}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nconst LanguageFilters = ({ setFilters, filters }) => {\n  const languages = new Set();\n  tools.forEach((tool) => {\n    if (tool.language) {\n      tool.language.forEach((cat) => languages.add(cat));\n    }\n  });\n  return (\n    <div style={{ display: \"block\" }}>\n      <label htmlFor=\"language-select\">Language: </label>\n      <select\n        value={filters.language || \"\"}\n        id=\"language-select\"\n        onChange={(event) =>\n          setFilters({ ...filters, language: event.target.value })\n        }\n      >\n        <option value=\"\">-- select an option --</option>\n        {[...languages].sort().map((tag) => (\n          <option key={tag} id={tag}>\n            {tag}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nconst PlatformFilters = ({ setFilters, filters }) => {\n  const platform = new Set();\n  tools.forEach((tool) => {\n    if (tool.platform) {\n      tool.platform.forEach((cat) => platform.add(cat));\n    }\n  });\n  return (\n    <div style={{ display: \"block\" }}>\n      <label htmlFor=\"platform-select\">Platform: </label>\n      <select\n        value={filters.platform || \"\"}\n        id=\"platform-select\"\n        onChange={(event) =>\n          setFilters({ ...filters, platform: event.target.value })\n        }\n      >\n        <option value=\"\">-- select an option --</option>\n        {[...platform].sort().map((tag) => (\n          <option key={tag} id={tag}>\n            {tag}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\nconst IndexPage = () => {\n  const [filters, setFilters] = useQueryParams({\n    tag: StringParam,\n    language: StringParam,\n    platform: StringParam,\n  });\n  const { language, tag, platform } = filters;\n\n  const filteredTools = tools\n    .filter((tool) => (language ? tool.language?.includes(language) : true))\n    .filter((tool) => (tag ? tool.tags?.includes(tag) : true))\n    .filter((tool) => (platform ? tool.platform?.includes(platform) : true));\n\n  return (\n    <main className=\"page\">\n      <title>awesome-genome-visualization</title>\n      <h1 style={{ margin: 0 }}>awesome-genome-visualization</h1>\n      <p>\n        This is a companion website for the github repo{\" \"}\n        <a href=\"https://github.com/cmdcolin/awesome-genome-visualization\">\n          https://github.com/cmdcolin/awesome-genome-visualization\n        </a>\n      </p>\n      <p>\n        Please submit PRs for more tools there and thanks to all the\n        contributors!\n      </p>\n      <p>Note: you can click on the images to make them larger</p>\n\n      <p>\n        Example filters:\n        <button\n          onClick={() => setFilters({ tag: \"\", language: \"\", platform: \"\" })}\n        >\n          Clear filters\n        </button>\n        <button onClick={() => setFilters({ tag: \"General\" })}>\n          General-purpose genome browsers\n        </button>\n        <button onClick={() => setFilters({ tag: \"Comparative\" })}>\n          Synteny/comparative browsers\n        </button>\n        <button onClick={() => setFilters({ tag: \"Dotplot\" })}>\n          Dotplot viewer\n        </button>\n        <button onClick={() => setFilters({ tag: \"MSA\" })}>MSA viewer</button>\n      </p>\n      <TagFilters filters={filters} setFilters={setFilters} />\n      <LanguageFilters filters={filters} setFilters={setFilters} />\n      <PlatformFilters filters={filters} setFilters={setFilters} />\n\n      <Cards filters={filters} tools={filteredTools} />\n      <p>\n        Note: if you would like your tool removed or screenshot removed (for\n        copyright purposes for example) let me know\n      </p>\n    </main>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}