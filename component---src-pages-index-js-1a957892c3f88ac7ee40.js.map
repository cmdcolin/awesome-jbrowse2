{"version":3,"sources":["webpack://awesome-genome-visualization/./src/pages/index.js"],"names":["pageStyles","backgroundColor","padding","fontFamily","Cards","tools","map","row","Card","key","name","url","language","tags","img","github","platform","publication","note","alt_url","useState","expanded","setExpanded","className","style","display","border","margin","href","year","join","flexGrow","onClick","state","alt","loading","maxWidth","maxHeight","cursor","width","src","TagFilters","setFilters","filters","Set","tool","forEach","cat","add","htmlFor","id","value","tag","onChange","event","target","sort","LanguageFilters","languages","PlatformFilters","filteredTools","includes","filter"],"mappings":"uj5CAIMA,EAAa,CACjBC,gBAAiB,OACjBC,QAAS,GACTC,WAAY,4CAGRC,EAAQ,SAAC,GACb,OAD2B,EAAZC,MACFC,KAAI,SAACC,GAAD,OAAS,gBAACC,EAAD,CAAMD,IAAKA,EAAKE,IAAKF,EAAIG,WAG/CF,EAAO,SAAC,GAaP,IAAD,IAZJD,IACEG,EAWE,EAXFA,KACAC,EAUE,EAVFA,IACAC,EASE,EATFA,SACAC,EAQE,EARFA,KACAC,EAOE,EAPFA,IACAC,EAME,EANFA,OACAC,EAKE,EALFA,SACAC,EAIE,EAJFA,YACAC,EAGE,EAHFA,KACAC,EAEE,EAFFA,QAEE,GAC4BC,eAAS,GAAlCC,EADH,KACaC,EADb,KAEJ,OACE,uBACEC,UAAU,OACVC,MAAO,CACLC,QAAS,OACTC,OAAQ,kBACRzB,gBAAiB,QACjB0B,OAAQ,GACRzB,QAAS,KAGX,2BACE,0BAAKQ,GACL,qBAAGkB,KAAMjB,GAAMA,GACdQ,EACC,oCACU,qBAAGS,KAAMT,GAAUA,IAE3B,KACHF,EACC,wCACe,IACb,qBAAGW,KAAMX,EAAYN,KAClBM,EAAYN,IAAK,IACjBM,EAAYY,KAAZ,IAAuBZ,EAAYY,KAAnC,IAA6C,OAGhD,KACHjB,EAAW,sCAAcA,EAASkB,KAAK,OAAa,KACpDjB,EAAO,kCAAUA,EAAKiB,KAAK,OAAa,KACxCZ,EAAO,kCAAUA,GAAY,KAC7BH,EACC,oCACU,qBAAGa,KAAMb,GAASA,IAE1B,KACHC,EAAW,sCAAcA,EAASc,KAAK,OAAa,MAEvD,uBAAKN,MAAO,CAAEO,SAAU,KACxB,2BACGjB,EACC,uBACEkB,QAAS,kBAAMV,GAAY,SAACW,GAAD,OAAYA,MACvCC,IAAG,iBAAmBxB,EACtByB,QAAQ,OACRX,MACEH,EACI,CAAEe,SAAU,IAAMC,UAAW,IAAKC,OAAQ,WAC1C,CACEC,MAAO,MACPH,SAAU,IACVC,UAAW,IACXC,OAAQ,WAGhBE,IAAK1B,IAGP,6CAOJ2B,EAAa,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAC1B9B,EAAO,IAAI+B,IAMjB,OALAvC,aAAc,SAACwC,GACTA,EAAKhC,MACPgC,EAAKhC,KAAKiC,SAAQ,SAACC,GAAD,OAASlC,EAAKmC,IAAID,SAItC,gCACE,yBAAOE,QAAQ,cAAf,SACA,0BACEC,GAAG,aACHC,MAAOR,EAAQS,IACfC,SAAU,SAACC,GAAD,OACRZ,EAAW,OAAD,UAAMC,EAAN,CAAeS,IAAKE,EAAMC,OAAOJ,WAG7C,0BAAQA,MAAM,IAAd,2BACC,OAAItC,GAAM2C,OAAOlD,KAAI,SAAC8C,GAAD,OACpB,0BAAQ3C,IAAK2C,EAAKF,GAAIE,GACnBA,SAQPK,EAAkB,SAAC,GAA6B,IAA3Bf,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAC/Be,EAAY,IAAId,IAMtB,OALAvC,aAAc,SAACwC,GACTA,EAAKjC,UACPiC,EAAKjC,SAASkC,SAAQ,SAACC,GAAD,OAASW,EAAUV,IAAID,SAI/C,gCACE,yBAAOE,QAAQ,mBAAf,cACA,0BACEE,MAAOR,EAAQ/B,SACfsC,GAAG,kBACHG,SAAU,SAACC,GAAD,OACRZ,EAAW,OAAD,UAAMC,EAAN,CAAe/B,SAAU0C,EAAMC,OAAOJ,WAGlD,0BAAQA,MAAM,IAAd,2BACC,OAAIO,GAAWF,OAAOlD,KAAI,SAAC8C,GAAD,OACzB,0BAAQ3C,IAAK2C,EAAKF,GAAIE,GACnBA,SAQPO,EAAkB,SAAC,GAA6B,IAA3BjB,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAC/B3B,EAAW,IAAI4B,IAMrB,OALAvC,aAAc,SAACwC,GACTA,EAAK7B,UACP6B,EAAK7B,SAAS8B,SAAQ,SAACC,GAAD,OAAS/B,EAASgC,IAAID,SAI9C,gCACE,yBAAOE,QAAQ,mBAAf,cACA,0BACEE,MAAOR,EAAQ3B,SACfkC,GAAG,kBACHG,SAAU,SAACC,GAAD,OACRZ,EAAW,OAAD,UAAMC,EAAN,CAAe3B,SAAUsC,EAAMC,OAAOJ,WAGlD,0BAAQA,MAAM,IAAd,2BACC,OAAInC,GAAUwC,OAAOlD,KAAI,SAAC8C,GAAD,OACxB,0BAAQ3C,IAAK2C,EAAKF,GAAIE,GACnBA,SA0Db,EAnDkB,WAAO,IAAD,GACQhC,cAAS,IAAhCuB,EADe,KACND,EADM,KAEd9B,EAA4B+B,EAA5B/B,SAAUwC,EAAkBT,EAAlBS,IAAKpC,EAAa2B,EAAb3B,SAEjB4C,EAAgBvD,YACZ,SAACwC,GAAD,aAAWjC,IAAQ,UAAGiC,EAAKjC,gBAAR,aAAG,EAAeiD,SAASjD,OACrDkD,QAAO,SAACjB,GAAD,aAAWO,IAAG,UAAGP,EAAKhC,YAAR,aAAG,EAAWgD,SAAST,OAC5CU,QAAO,SAACjB,GAAD,aAAW7B,IAAQ,UAAG6B,EAAK7B,gBAAR,aAAG,EAAe6C,SAAS7C,OAExD,OACE,wBAAMQ,MAAOxB,GACX,6DACA,0DACA,2EAEE,qBAAG4B,KAAK,4DAAR,6DAIF,uGAIA,kFAEA,4CAEE,0BAAQI,QAAS,kBAAMU,EAAW,CAAEU,IAAK,cAAzC,mCAGA,0BAAQpB,QAAS,kBAAMU,EAAW,CAAEU,IAAK,kBAAzC,gCAGA,0BAAQpB,QAAS,kBAAMU,EAAW,CAAEU,IAAK,cAAzC,kBAGA,0BAAQpB,QAAS,kBAAMU,EAAW,CAAEU,IAAK,UAAzC,eAEF,gBAACX,EAAD,CAAYE,QAASA,EAASD,WAAYA,IAC1C,gBAACe,EAAD,CAAiBd,QAASA,EAASD,WAAYA,IAC/C,gBAACiB,EAAD,CAAiBhB,QAASA,EAASD,WAAYA,IAE/C,gBAACtC,EAAD,CAAOuC,QAASA,EAAStC,MAAOuD,IAChC","file":"component---src-pages-index-js-1a957892c3f88ac7ee40.js","sourcesContent":["import React, { useState } from \"react\";\nimport { tools } from \"./TOOLS.json\";\nimport \"./App.css\";\n\nconst pageStyles = {\n  backgroundColor: \"#ccc\",\n  padding: 30,\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n};\n\nconst Cards = ({ tools }) => {\n  return tools.map((row) => <Card row={row} key={row.name} />);\n};\n\nconst Card = ({\n  row: {\n    name,\n    url,\n    language,\n    tags,\n    img,\n    github,\n    platform,\n    publication,\n    note,\n    alt_url,\n  },\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div\n      className=\"card\"\n      style={{\n        display: \"flex\",\n        border: \"1px solid black\",\n        backgroundColor: \"white\",\n        margin: 10,\n        padding: 10,\n      }}\n    >\n      <div>\n        <h3>{name}</h3>\n        <a href={url}>{url}</a>\n        {alt_url ? (\n          <p>\n            Alt url <a href={alt_url}>{alt_url}</a>\n          </p>\n        ) : null}\n        {publication ? (\n          <p>\n            Publication:{\" \"}\n            <a href={publication.url}>\n              {publication.url}{\" \"}\n              {publication.year ? `(${publication.year})` : null}\n            </a>\n          </p>\n        ) : null}\n        {language ? <p>Language: {language.join(\", \")}</p> : null}\n        {tags ? <p>tags: {tags.join(\", \")}</p> : null}\n        {note ? <p>note: {note}</p> : null}\n        {github ? (\n          <p>\n            Github: <a href={github}>{github}</a>\n          </p>\n        ) : null}\n        {platform ? <p>platform: {platform.join(\", \")}</p> : null}\n      </div>\n      <div style={{ flexGrow: 1 }} />\n      <div>\n        {img ? (\n          <img\n            onClick={() => setExpanded((state) => !state)}\n            alt={`screenshot of ${name}`}\n            loading=\"lazy\"\n            style={\n              expanded\n                ? { maxWidth: 1000, maxHeight: 800, cursor: \"pointer\" }\n                : {\n                    width: \"90%\",\n                    maxWidth: 400,\n                    maxHeight: 200,\n                    cursor: \"pointer\",\n                  }\n            }\n            src={img}\n          />\n        ) : (\n          <p>No screenshot</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst TagFilters = ({ setFilters, filters }) => {\n  const tags = new Set();\n  tools.forEach((tool) => {\n    if (tool.tags) {\n      tool.tags.forEach((cat) => tags.add(cat));\n    }\n  });\n  return (\n    <>\n      <label htmlFor=\"tag-select\">Tag: </label>\n      <select\n        id=\"tag-select\"\n        value={filters.tag}\n        onChange={(event) =>\n          setFilters({ ...filters, tag: event.target.value })\n        }\n      >\n        <option value=\"\">-- select an option --</option>\n        {[...tags].sort().map((tag) => (\n          <option key={tag} id={tag}>\n            {tag}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\n\nconst LanguageFilters = ({ setFilters, filters }) => {\n  const languages = new Set();\n  tools.forEach((tool) => {\n    if (tool.language) {\n      tool.language.forEach((cat) => languages.add(cat));\n    }\n  });\n  return (\n    <>\n      <label htmlFor=\"language-select\">Language: </label>\n      <select\n        value={filters.language}\n        id=\"language-select\"\n        onChange={(event) =>\n          setFilters({ ...filters, language: event.target.value })\n        }\n      >\n        <option value=\"\">-- select an option --</option>\n        {[...languages].sort().map((tag) => (\n          <option key={tag} id={tag}>\n            {tag}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\n\nconst PlatformFilters = ({ setFilters, filters }) => {\n  const platform = new Set();\n  tools.forEach((tool) => {\n    if (tool.platform) {\n      tool.platform.forEach((cat) => platform.add(cat));\n    }\n  });\n  return (\n    <>\n      <label htmlFor=\"platform-select\">Platform: </label>\n      <select\n        value={filters.platform}\n        id=\"platform-select\"\n        onChange={(event) =>\n          setFilters({ ...filters, platform: event.target.value })\n        }\n      >\n        <option value=\"\">-- select an option --</option>\n        {[...platform].sort().map((tag) => (\n          <option key={tag} id={tag}>\n            {tag}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\nconst IndexPage = () => {\n  const [filters, setFilters] = useState({});\n  const { language, tag, platform } = filters;\n\n  const filteredTools = tools\n    .filter((tool) => (language ? tool.language?.includes(language) : true))\n    .filter((tool) => (tag ? tool.tags?.includes(tag) : true))\n    .filter((tool) => (platform ? tool.platform?.includes(platform) : true));\n\n  return (\n    <main style={pageStyles}>\n      <title>awesome-genome-visualization</title>\n      <h1>awesome-genome-visualization</h1>\n      <p>\n        This is a companion website for the github repo\n        <a href=\"https://github.com/cmdcolin/awesome-genome-visualization\">\n          https://github.com/cmdcolin/awesome-genome-visualization\n        </a>\n      </p>\n      <p>\n        Please submit PRs for more tools there and thanks to all the\n        contributors!\n      </p>\n      <p>Note: you can click on the images to make them larger</p>\n\n      <p>\n        Example filters:\n        <button onClick={() => setFilters({ tag: \"General\" })}>\n          General-purpose genome browsers\n        </button>\n        <button onClick={() => setFilters({ tag: \"Comparative\" })}>\n          Synteny/comparative browsers\n        </button>\n        <button onClick={() => setFilters({ tag: \"Dotplot\" })}>\n          Dotplot viewer\n        </button>\n        <button onClick={() => setFilters({ tag: \"MSA\" })}>MSA viewer</button>\n      </p>\n      <TagFilters filters={filters} setFilters={setFilters} />\n      <LanguageFilters filters={filters} setFilters={setFilters} />\n      <PlatformFilters filters={filters} setFilters={setFilters} />\n\n      <Cards filters={filters} tools={filteredTools} />\n      <p>\n        Note: if you would like your tool removed or screenshot removed (for\n        copyright purposes for example) let me know\n      </p>\n    </main>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}